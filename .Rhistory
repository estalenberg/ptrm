bins <- c(seq(-200,200,by=50))
pal <- colorBin("Spectral", domain = model.plot$price, bins = bins)
bins
bins <- c(seq(-200,200,by=20))
bins <- c(seq(-200,200,by=20))
bins
bins <- c((seq(-200,-20,by=20)),(seq(0,200,by=20)))
bins
bins <- c((seq(-200,0,by=20)),(seq(0,200,by=20)))
bins
pal <- colorBin("Spectral", domain = model.plot$price, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g <span>&#37;</span> change",
model.plot$name.lab, model.plot$price
) %>% lapply(htmltools::HTML)
m= leaflet('map') %>%
setView(150, -30, 4) %>%
addTiles()
m=  m %>%
addPolygons(data = model.plot, fillColor = ~pal(model.plot$price),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
bins <- c((seq(-200,0,by=20)),0.5,(seq(20,200,by=20)))
bins
pal <- colorBin("Spectral", domain = model.plot$price, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g <span>&#37;</span> change",
model.plot$name.lab, model.plot$price
) %>% lapply(htmltools::HTML)
m= leaflet('map') %>%
setView(150, -30, 4) %>%
addTiles()
m=  m %>%
addPolygons(data = model.plot, fillColor = ~pal(model.plot$price),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
bins <- c((seq(-200,0,by=50)),0.5,(seq(50,200,by=50)))
pal <- colorBin("Spectral", domain = model.plot$price, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g <span>&#37;</span> change",
model.plot$name.lab, model.plot$price
) %>% lapply(htmltools::HTML)
m= leaflet('map') %>%
setView(150, -30, 4) %>%
addTiles()
m=  m %>%
addPolygons(data = model.plot, fillColor = ~pal(model.plot$price),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
saeq=as.numeric(round(pchange2160_pGWh,digits=1))
auseq=-30+saeq
price=c(auseq,NA,NA,NA,NA,NA,NA,saeq,NA,NA,NA,NA,NA,NA)
name=c("ausgrid"  , "essential", "evoenergy" ,"endeavour" ,"energex",   "ergon", "pandw","sapn","tasnet","ausnet",
"citipower", "powercor","united","jemena")
name.lab=c("Ausgrid"  , "Essential Energy", "Evoenergy" ,"Endeavour Energy" ,"Energex", "Ergon Energy",
"Power and Water","SAPN","Tasnet","Ausnet",
"Citipower", "Powercor","United Energy","Jemena")
labels=paste(as.numeric(price),"%")
labels=gsub(" ", "", labels, fixed = TRUE)
data <- cbind.data.frame(price,labels,name, name.lab)
model.plot=merge(alldnsp, data, by="name", all.x=TRUE)
bins <- c((seq(-200,0,by=50)),0.5,(seq(50,200,by=50)))
pal <- colorBin("Spectral", domain = model.plot$price, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g <span>&#37;</span> change",
model.plot$name.lab, model.plot$price
) %>% lapply(htmltools::HTML)
m= leaflet('map') %>%
setView(150, -30, 4) %>%
addTiles()
m=  m %>%
addPolygons(data = model.plot, fillColor = ~(pal(model.plot$price)*-1),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
#leaflet
m=  m %>%
addPolygons(data = model.plot, fillColor = ~rev(pal(model.plot$price)),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
labels=paste(as.numeric(price),"%")
labels=gsub(" ", "", labels, fixed = TRUE)
data <- cbind.data.frame(price,labels,name, name.lab)
model.plot=merge(alldnsp, data, by="name", all.x=TRUE)
bins <- c((seq(-200,0,by=50)),0.5,(seq(50,200,by=50)))
pal <- rev(colorBin("Spectral", domain = model.plot$price, bins = bins))
labels <- sprintf(
"<strong>%s</strong><br/>%g <span>&#37;</span> change",
model.plot$name.lab, model.plot$price
) %>% lapply(htmltools::HTML)
m= leaflet('map') %>%
setView(150, -30, 4) %>%
addTiles()
m=  m %>%
addPolygons(data = model.plot, fillColor = ~pal(model.plot$price),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
?colorBin
pal <- colorBin("Spectral", domain = model.plot$price, bins = bins,reverse = T)
labels <- sprintf(
"<strong>%s</strong><br/>%g <span>&#37;</span> change",
model.plot$name.lab, model.plot$price
) %>% lapply(htmltools::HTML)
m= leaflet('map') %>%
setView(150, -30, 4) %>%
addTiles()
m=  m %>%
addPolygons(data = model.plot, fillColor = ~pal(model.plot$price),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
labels <- sprintf(
"<strong>%s</strong><br/>%g <span>&#37;</span>change",
model.plot$name.lab, model.plot$price
) %>% lapply(htmltools::HTML)
m= leaflet('map') %>%
setView(150, -30, 4) %>%
addTiles()
m=  m %>%
addPolygons(data = model.plot, fillColor = ~pal(model.plot$price),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price,
"<br><strong> <span>&#37;</span> </strong>"),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
m=  m %>%
addPolygons(data = model.plot, fillColor = ~pal(model.plot$price),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price,"<br><strong> <span>&#37;</span> per </strong>"),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
cars.in
cars.in=100#%
cars60=cars.in/100 #decimal percent
cars60
#load package from local source
#set working directory to package directory
setwd("c://R/packages/ptrm")
load_all("./",T)
document()
#load package from local source
#set working directory to package directory
setwd("c://R/packages/ptrm")
load_all("./",T)
library(devtools)
library(roxygen2)
#load package from local source
#set working directory to package directory
setwd("c://R/packages/ptrm")
load_all("./",T)
document()
#check package
check()
#check package
check()
shiny::runApp('C:/R/shiny/DA_testapp')
runApp('C:/R/shiny/DA_testapp')
#document and check package
#set working dir to package dir
setwd("c://R/packages/ptrm")
document()
load_all("c://R/packages/ptrm",T)
runApp('C:/R/shiny/DA_testapp')
#dynamic inputs----
projyearend.in=2080-2000
projyearend.in
# import data ----
setwd("C:/R/shiny/DA_testapp")
assets.df = read.csv("./data/allassets.csv")
labels=names(assets.df)
labels[1]="dnsp"
names(assets.df)=labels
other.df = read.csv("./data/allother.csv",header=T)
labels=names(other.df)
labels=c("dnsp","dnspname","type","name","description","all.years","0","1","2","3","4","5","6","7","8","9","10","taxinc","taxexp")
names(other.df)=labels
projyearend = projyearend.in
startyearend=other.df$all.years[other.df$name=="year start"]
other.df$name
View(other.df)
#cut to dnsp
d.name=c("Ausgrid","SAPN")
d.code=1:2
dnsp.df=cbind.data.frame(d.code,d.name)
dnsp=as.numeric(dnsp.df$d.code[dnsp.df$d.name==dnsp.in])
dnsp.label=as.character(dnsp.in)
assets.df=assets.df[assets.df$dnsp==(as.numeric(dnsp)),]
assets.df=subset(assets.df,(!is.na(assets.df$dnsp)))
other.df=other.df[other.df$dnsp==(as.numeric(dnsp)),]
other.df=subset(other.df,(!is.na(other.df$dnsp)))
df.real=ptrm_fun(assets.df,other.df, projyearend.in, age.in, retireslim.in,addnew.in,
productivity.in,dnsp.in, method, dynamicincdebt.in)
projyearend.in = 101
age.in=64.5
retireslim.in=10 #%
addnew.in=10 #%
productivity.in=0 #%
dynamicincdebt.in=2 #%
cars.in=100#%
method=2 #1=warl, 2=yearonyear
dnsp.in=as.character("SAPN") #(1: ausgrid, 2: sa)
setwd("C:/R/shiny/DA_testapp")
#load data
assets.df = read.csv("./data/allassets.csv")
labels=names(assets.df)
labels[1]="dnsp"
names(assets.df)=labels
other.df = read.csv("./data/allother.csv",header=T)
labels=names(other.df)
labels=c("dnsp","dnspname","type","name","description","all.years","0","1","2","3","4","5","6","7","8","9","10","taxinc","taxexp")
names(other.df)=labels
#call ptrm function from package #this one automatically cuts for dnsp
df.real=ptrm_fun(assets.df,other.df, projyearend.in, age.in, retireslim.in,addnew.in,
productivity.in,dnsp.in, method, dynamicincdebt.in)
d.name=c("Ausgrid","SAPN")
d.code=1:2
dnsp.df=cbind.data.frame(d.code,d.name)
dnsp=as.numeric(dnsp.df$d.code[dnsp.df$d.name==dnsp.in])
dnsp.label=as.character(dnsp.in)
assets.df=assets.df[assets.df$dnsp==(as.numeric(dnsp)),]
assets.df=subset(assets.df,(!is.na(assets.df$dnsp)))
other.df=other.df[other.df$dnsp==(as.numeric(dnsp)),]
other.df=subset(other.df,(!is.na(other.df$dnsp)))
#document and check package
#set working dir to package dir
setwd("c://R/packages/ptrm")
document()
load_all("c://R/packages/ptrm",T)
#check package
check()
#document and check package
#set working dir to package dir
setwd("c://R/packages/ptrm")
document()
load_all("c://R/packages/ptrm",T)
#check package
check()
library(ptrm)
projyearend.in = 101
age.in=64.5
retireslim.in=10 #%
addnew.in=10 #%
productivity.in=0 #%
dynamicincdebt.in=2 #%
cars.in=100#%
method=2 #1=warl, 2=yearonyear
dnsp.in=as.character("SAPN") #(1: ausgrid, 2: sa)
setwd("C:/R/shiny/DA_testapp")
#load data
assets.df = read.csv("./data/allassets.csv")
labels=names(assets.df)
labels[1]="dnsp"
names(assets.df)=labels
other.df = read.csv("./data/allother.csv",header=T)
labels=names(other.df)
labels=c("dnsp","dnspname","type","name","description","all.years","0","1","2","3","4","5","6","7","8","9","10","taxinc","taxexp")
names(other.df)=labels
#call ptrm function from package #this one automatically cuts for dnsp
df.real=ptrm_fun(assets.df,other.df, projyearend.in, age.in, retireslim.in,addnew.in,
productivity.in,dnsp.in, method, dynamicincdebt.in)
#call energy volumes with electric cars
energyvol.df=allenergyvol_fun(dnsp.in,other.df,cars.in,projyearend.in)
#call price function
price.df=price_fun(dnsp.in,df.real,energyvol.df,other.df,projyearend.in)
rev_pcust=subset(price.df,price.df$names=="rev_pcust")
rev_pGWh=subset(price.df,price.df$names=="rev_pGWh")
pchange2160_pcust=((rev_pcust[40]-rev_pcust[1])/rev_pcust[1])*100
#mapping variable:
pchange2160_pGWh=((rev_pGWh[40]-rev_pGWh[1])/rev_pGWh[1])*100
pchange2160_pGWh
alldnsp=readRDS("./data/alldnsp.rds")
library(leaflet)
saeq=as.numeric(round(pchange2160_pGWh,digits=1))
auseq=-30+saeq
price=c(auseq,NA,NA,NA,NA,NA,NA,saeq,NA,NA,NA,NA,NA,NA)
name=c("ausgrid"  , "essential", "evoenergy" ,"endeavour" ,"energex",   "ergon", "pandw","sapn","tasnet","ausnet",
"citipower", "powercor","united","jemena")
name.lab=c("Ausgrid"  , "Essential Energy", "Evoenergy" ,"Endeavour Energy" ,"Energex", "Ergon Energy",
"Power and Water","SAPN","Tasnet","Ausnet",
"Citipower", "Powercor","United Energy","Jemena")
labels=paste(as.numeric(price),"%")
labels=gsub(" ", "", labels, fixed = TRUE)
data <- cbind.data.frame(price,labels,name, name.lab)
model.plot=merge(alldnsp, data, by="name", all.x=TRUE)
bins <- c((seq(-200,0,by=50)),0.5,(seq(50,200,by=50)))
pal <- colorBin("Spectral", domain = model.plot$price, bins = bins,reverse = T)
labels <- sprintf(
"<strong>%s</strong><br/>%g <span>&#37;</span>increase",
model.plot$name.lab, model.plot$price
) %>% lapply(htmltools::HTML)
m= leaflet('map') %>%
setView(150, -30, 4) %>%
addTiles()
m=  m %>%
addPolygons(data = model.plot, fillColor = ~pal(model.plot$price),
popup = paste0("<strong>DSNP: </strong>",
model.plot$name.lab,
"<br><strong> Price increase: </strong>",
model.plot$price,"<br><strong> <span>&#37;</span> per GWh </strong>"),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>%  addLegend(data=model.plot, position="bottomright", pal = pal, values = ~model.plot$price,
title = "Percent change in price",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
runApp()
